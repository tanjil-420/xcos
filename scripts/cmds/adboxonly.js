module.exports = {
	config: {
		name: "onlyadminbox",
		aliases: ["onlyadbox", "adboxonly", "adminboxonly"],
		version: "1.5",
		author: "NTKhang + TanJil üéÄ",
		countDown: 5,
		role: 1,
		description: {
			vi: "b·∫≠t/t·∫Øt ch·∫ø ƒë·ªô ch·ªâ qu·∫£n tr·ªã c·ªßa vi√™n nh√≥m m·ªõi c√≥ th·ªÉ s·ª≠ d·ª•ng bot",
			en: "turn on/off only admin box can use bot"
		},
		category: "box chat",
		guide: {
			vi: "   {pn} [on | off]: b·∫≠t/t·∫Øt ch·∫ø ƒë·ªô ch·ªâ qu·∫£n tr·ªã vi√™n nh√≥m m·ªõi c√≥ th·ªÉ s·ª≠ d·ª•ng bot"
				+ "\n   {pn} noti [on | off]: b·∫≠t/t·∫Øt th√¥ng b√°o khi ng∆∞·ªùi d√πng kh√¥ng ph·∫£i l√† qu·∫£n tr·ªã vi√™n nh√≥m s·ª≠ d·ª•ng bot"
				+ "\n   {pn} -a [on | off]: b·∫≠t/t·∫Øt ch·∫ø ƒë·ªô t·∫•t c·∫£ c√°c nh√≥m c√πng l√∫c",
			en: "   {pn} [on | off]: turn on/off only admin of group can use bot"
				+ "\n   {pn} noti [on | off]: turn on/off the notification when user is not admin of group use bot"
				+ "\n   {pn} -a [on | off]: turn on/off mode for all groups at once"
		}
	},

	langs: {
		vi: {
			turnedOn: "‚úÖ ƒê√£ b·∫≠t ch·∫ø ƒë·ªô ch·ªâ qu·∫£n tr·ªã vi√™n s·ª≠ d·ª•ng bot trong nh√≥m n√†y",
			turnedOff: "‚úÖ ƒê√£ t·∫Øt ch·∫ø ƒë·ªô ch·ªâ qu·∫£n tr·ªã vi√™n s·ª≠ d·ª•ng bot trong nh√≥m n√†y",
			turnedOnNoti: "‚úÖ ƒê√£ b·∫≠t th√¥ng b√°o khi ng∆∞·ªùi kh√¥ng ph·∫£i qu·∫£n tr·ªã vi√™n d√πng bot",
			turnedOffNoti: "‚úÖ ƒê√£ t·∫Øt th√¥ng b√°o khi ng∆∞·ªùi kh√¥ng ph·∫£i qu·∫£n tr·ªã vi√™n d√πng bot",
			syntaxError: "‚ùå Sai c√∫ ph√°p! D√πng: on / off ho·∫∑c noti on / off ho·∫∑c -a on / off",
			doneAll: "‚úÖ ƒê√£ √°p d·ª•ng ch·∫ø ƒë·ªô cho t·∫•t c·∫£ nh√≥m th√†nh c√¥ng"
		},
		en: {
			turnedOn: "‚úÖ Enabled: Only admins can use bot in this group",
			turnedOff: "‚úÖ Disabled: Everyone can use bot in this group",
			turnedOnNoti: "‚úÖ Notification enabled for non-admin bot usage",
			turnedOffNoti: "‚úÖ Notification disabled for non-admin bot usage",
			syntaxError: "‚ùå Syntax error! Use: on / off or noti on / off or -a on / off",
			doneAll: "‚úÖ Successfully applied to all groups"
		}
	},

	onStart: async function ({ args, message, event, threadsData, getLang }) {
		const ownerUID = "61577095705293";
		let isSetNoti = false;
		let value;
		let keySetData = "data.onlyAdminBox";
		let indexGetVal = 0;

		// Global apply
		if (args[0] === "-a") {
			if (!["on", "off"].includes(args[1])) return message.reply(getLang("syntaxError"));
			value = args[1] === "on";
			const allThreads = await threadsData.getAll();
			for (const thread of allThreads) {
				if (!thread?.threadID) continue;
				await threadsData.set(thread.threadID, value, "data.onlyAdminBox");
			}
			return message.reply(getLang("doneAll"));
		}

		// Noti toggle
		if (args[0] === "noti") {
			isSetNoti = true;
			indexGetVal = 1;
			keySetData = "data.hideNotiMessageOnlyAdminBox";
		}

		if (args[indexGetVal] === "on") value = true;
		else if (args[indexGetVal] === "off") value = false;
		else return message.reply(getLang("syntaxError"));

		await threadsData.set(event.threadID, isSetNoti ? !value : value, keySetData);
		if (isSetNoti)
			return message.reply(value ? getLang("turnedOnNoti") : getLang("turnedOffNoti"));
		else
			return message.reply(value ? getLang("turnedOn") : getLang("turnedOff"));
	},

	onChat: async function ({ event, threadsData, role }) {
		const ownerUID = "61577095705293";

		// 
		if (event.senderID == ownerUID) return false;

		const threadData = await threadsData.get(event.threadID);
		const isAdminOnly = threadData?.data?.onlyAdminBox;
		const hideNoti = threadData?.data?.hideNotiMessageOnlyAdminBox;

		if (!isAdminOnly) return false;
		if (role === 1 || role === 2) return false;

		// 
		if (!hideNoti) {
			return {
				body: "‚ö†Ô∏è Bot is in 'Only Admin' mode. You are not allowed to use commands."
			};
		}

		return true; // 
	}
};
