module.exports.config = {
    name: "son",
    category: "media",
    author: "Romim√óBaYjid",
    role: 2,
    shortDescription: "‡¶Æ‡ßá‡¶®‡¶∂‡¶® ‡¶ï‡¶∞‡¶æ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶ï‡ßá ‡¶ó‡¶æ‡¶≤‡¶ø ‡¶¶‡ßá‡ßü / ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßá",
    usage: ".son @user | .son off @user | .son info",
};

const userResponses = {};

module.exports.onStart = async function({ api, event }) {
    const args = event.body.trim().split(/\s+/).slice(1); // ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶∞ ‡¶™‡¶∞‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂
    const subCommand = args[0];

    if (subCommand === "info") {
        return api.sendMessage(
            "üí° .son @user  => ‡¶Æ‡ßá‡¶®‡¶∂‡¶®‡¶ï‡ßÉ‡¶§ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶ï‡ßá ‡¶ó‡¶æ‡¶≤‡¶ø ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶¨‡ßá\n" +
            "üí° .son off @user => ‡¶Æ‡ßá‡¶®‡¶∂‡¶®‡¶ï‡ßÉ‡¶§ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ó‡¶æ‡¶≤‡¶ø ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶¨‡ßá\n" +
            "üí° .son info => ‡¶è‡¶á ‡¶á‡¶®‡¶´‡ßã ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá", 
            event.threadID
        );
    }

    const mentionIDs = Object.keys(event.mentions);

    if (mentionIDs.length === 0) {
        return api.sendMessage("‚ùå ‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶ï‡¶æ‡¶ï‡ßá ‡¶ö‡ßÅ‡¶¶‡¶§‡ßá ‡¶ö‡¶æ‡¶ì ‡¶§‡¶æ‡¶∞‡ßá ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡¶∂‡¶® ‡¶ï‡¶∞‡ßã!", event.threadID);
    }

    const mention = mentionIDs[0];

    // ‡¶Ø‡¶¶‡¶ø "off" ‡¶∏‡¶æ‡¶¨‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶ó‡¶æ‡¶≤‡¶ø ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßã
    if (subCommand === "off") {
        if (userResponses[mention] && userResponses[mention].active) {
            userResponses[mention].active = false;
            return api.sendMessage(`‚úÖ ${event.mentions[mention]} ‡¶ï‡ßá ‡¶ö‡ßÅ‡¶¶‡¶æ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã`, event.threadID);
        } else {
            return api.sendMessage(`‚ùå ${event.mentions[mention]} ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡ßã‡¶®‡ßã ‡¶ó‡¶æ‡¶≤‡¶ø ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶®‡ßá‡¶á‡•§`, event.threadID);
        }
    }

    // ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶ï‡ßç‡¶∑‡ßá‡¶§‡ßç‡¶∞‡ßá (‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ son ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°)
    api.getUserInfo(mention, async (err, userInfo) => {
        if (err) {
            console.error("‚ö†Ô∏è ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ü‡¶®‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ:", err);
            return api.sendMessage("‚ùå ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ü‡¶®‡¶§‡ßá ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶•!", event.threadID);
        }

        let genderText;
        switch (userInfo[mention].gender) {
            case 1:
                genderText = "‡¶Æ‡¶æ‡¶á‡¶Ø‡¶º‡¶æ";
                break;
            case 2:
                genderText = "‡¶™‡ßã‡¶≤‡¶æ";
                break;
            default:
                genderText = "‡¶π‡¶ø‡¶ú‡¶°‡¶º‡¶æ";
        }

        const insults = [
            `‡¶ñ‡¶æ‡¶Ç‡¶ï‡¶ø‡¶∞ ${genderText}, ‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ‡¶∞ ‡¶≠‡ßã‡¶¶‡¶æ ‡¶§‡ßá ‡¶ó‡¶æ‡¶ß‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶≤ ‡¶´‡¶æ‡¶≤‡¶æ‡¶¨‡ßã! üòà`,
            `‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ ‡¶ï‡ßá ‡¶ö‡ßÅ‡¶¶‡ßá ‡¶ö‡ßÅ‡¶¶‡ßá ‡¶™‡¶≤‡ßç‡¶ü‡¶ø ‡¶Æ‡¶æ‡¶∞‡¶¨‡ßã, ‡¶ó‡¶æ‡¶ß‡¶æ‡¶∞ ${genderText}! üò°`,
            `‡¶¨‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶™‡¶æ‡¶∂‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶≤ ‡¶´‡ßá‡¶≤‡ßá ‡¶¶‡¶ø‡ßü‡ßá ‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ ‡¶ï‡ßá ‡¶ö‡ßÅ‡¶¶‡¶§‡ßá ‡¶ö‡¶æ‡¶á! üî•`,
            `‡¶ö‡ßÅ‡¶¶‡¶æ ‡¶ñ‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ‡¶∞, ‡¶Ü‡¶Æ‡¶ø ‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ‡¶∞ ‡¶≠‡ßã‡¶¶‡¶æ‡¶Ø‡¶º ‡¶ü‡¶æ‡¶® ‡¶¶‡¶ø‡¶¨‡ßã! üí£`,
            `‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ‡¶∞ ‡¶ó‡ßÅ‡¶¶‡ßá ‡¶´‡ßÅ‡¶≤ ‡¶ü‡ßç‡¶Ø‡¶æ‡¶¨‡¶≤‡ßá‡¶ü ‡¶™‡ßÅ‡¶∂ ‡¶ï‡¶∞‡ßá, ‡¶ó‡¶æ‡¶ß‡¶æ‡¶∞ ${genderText}! üòõ`,
            `‡¶§‡ßã‡¶∞ ‡¶¨‡ßã‡¶®‡ßá‡¶∞ ‡¶Æ‡ßÅ‡¶ñ‡ßá ‡¶Æ‡¶æ‡¶≤ ‡¶´‡¶æ‡¶≤‡¶æ‡¶®‡ßã‡¶∞ ‡¶ï‡¶•‡¶æ ‡¶≠‡¶æ‡¶¨‡¶ø, ‡¶Æ‡¶æ‡¶ó‡ßÄ ${genderText}!`,
            `‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ‡¶ï‡ßá ‡¶ó‡¶æ‡¶ß‡¶æ‡¶∞ ‡¶Æ‡¶§‡ßã ‡¶ö‡ßÅ‡¶¶‡ßá ‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ ‡¶¨‡¶≤‡¶¨ "‡¶è‡¶ü‡¶æ ‡¶ï‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶≤?"`,
            `‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ‡¶∞ ‡¶ó‡ßÅ‡¶¶‡ßá ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ü‡¶â‡¶ü‡¶™‡ßÅ‡¶ü ‡¶®‡ßá‡¶¨‡ßã, ‡¶™‡ßã‡¶≤‡¶æ‡¶™‡¶æ‡¶á‡¶® ${genderText}!`,
            `‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ‡¶∞ ‡¶≠‡ßã‡¶¶‡¶æ‡¶Ø‡¶º ‡¶ó‡¶æ‡¶ß‡¶æ‡¶∞ ‡¶Æ‡¶§‡ßã ‡¶Æ‡¶æ‡¶≤ ‡¶´‡¶æ‡¶≤‡¶ø‡¶Ø‡¶º‡ßá ‡¶¶‡ßá‡¶¨‡ßã, ‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶∞‡¶æ‡¶§‡ßá‡¶á! üî•`,
            `‡¶è‡¶ñ‡¶® ‡¶Æ‡¶æ‡¶ó‡ßÄ‡¶∞ ${genderText} ‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ‡¶∞ ‡¶≠‡ßã‡¶¶‡¶æ ‡¶ö‡ßÅ‡¶¶‡ßá, ‡¶è‡¶ï ‡¶ü‡ßÅ‡¶ï‡¶∞‡¶æ ‡¶¶‡ßá‡¶¨‡ßã! üò†`,
            `‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ ‡¶ï‡ßá ‡¶ö‡ßÅ‡¶¶‡ßá ‡¶™‡¶≤‡ßç‡¶ü‡¶ø ‡¶Æ‡¶æ‡¶∞‡¶¨‡ßã, ‡¶ó‡¶æ‡¶ß‡¶æ‡¶∞ ${genderText}! ü§°`,
        ];

        if (!userResponses[mention]) {
            userResponses[mention] = { index: 0, active: true };
        } else {
            userResponses[mention].active = true; // ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶ï‡¶∞‡ßã ‡¶Ø‡¶¶‡¶ø ‡¶Ü‡¶ó‡ßá ‡¶¨‡¶®‡ßç‡¶ß ‡¶•‡¶æ‡¶ï‡ßá
        }

        if (userResponses[mention].active) {
            api.sendMessage(`üòÜ ‡¶ï‡¶ø‡¶∞‡ßá ${event.mentions[mention]}! ‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡¶ø‡¶∏..?`, event.threadID);
        } else {
            return api.sendMessage(`‚ùå ${event.mentions[mention]} ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ó‡¶æ‡¶≤‡¶ø ‡¶¨‡¶®‡ßç‡¶ß ‡¶Ü‡¶õ‡ßá‡•§`, event.threadID);
        }

        // MQTT ‡¶≤‡¶ø‡¶∏‡ßá‡¶®‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶¨‡ßã ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶∂‡ßÅ‡¶ß‡ßÅ active ‡¶π‡¶≤‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶¨‡ßá
        api.listenMqtt((err, message) => {
            if (err) {
                console.error("‚ö†Ô∏è MQTT Listener Error:", err);
                return;
            }
            if (message.senderID === mention && message.body && userResponses[mention] && userResponses[mention].active) {
                const currentIndex = userResponses[mention].index;
                api.sendMessage(insults[currentIndex % insults.length], message.threadID, message.messageID);
                userResponses[mention].index++;
            }
        });
    });
};
